import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as g,c as h,g as f,a as s,w as t,b as e,e as o,h as i,r as a}from"./app.7119fecc.js";const m="/yeergubai-blog/assets/vscode-hint-light.829d10ed.png",v="/yeergubai-blog/assets/vscode-hint-dark.c5d6cf83.png",_="/yeergubai-blog/assets/vscode-error-light.3c214af5.png",b="/yeergubai-blog/assets/vscode-error-dark.4177ebab.png",y="/yeergubai-blog/assets/vscode-autocomplete-light.3523f41e.png",k="/yeergubai-blog/assets/vscode-autocomplete-dark.ff24938c.png",C={},w=e("p",null,"This tutorial guides you on how to configure a VuePress project.",-1),V=i('<h2 id="configure-vuepress" tabindex="-1"><a class="header-anchor" href="#configure-vuepress" aria-hidden="true">#</a> Configure VuePress</h2><p>Without config files, a VuePress project can only achieve limited functionality by default, so to better customize your website, VuePress provides config files.</p><p>VuePress uses <code>.vuepress</code> folder under the project folder to store configuration, and all VuePress related files will be placed here.</p><p>For a VuePress site, <code>.vuepress/config.ts</code> (or <code>.vuepress/config.js</code>) is the necessary config file.</p><div class="custom-container tip"><p class="custom-container-title">Use TS configuration file</p><p>We recommend you to use TypeScript config files for better type hinting, autocompletion and error checking.</p><p>If you are not familiar with TypeScript, you can also use a JavaScript config file, but it is better to use an editor such as VSCode that fully supports TS/JS features to avoid losing the type checking, autocompletion and option hints features mentioned below.</p></div><h2 id="config-file" tabindex="-1"><a class="header-anchor" href="#config-file" aria-hidden="true">#</a> Config File</h2><p>You need to set up a config object in the config file <code>.vuepress/config.ts</code> (or <code>.vuepress/config.js</code>) and export it.</p><p>To get correct hints, importing <code>defineUserConfig</code> from <code>vuepress</code> and wrapping the config object is recommended:</p>',8),P=e("div",{class:"language-typescript ext-ts line-numbers-mode"},[e("pre",{class:"language-typescript"},[e("code",null,[e("span",{class:"token comment"},"// .vuepress/config.ts"),o(`
`),e("span",{class:"token keyword"},"import"),o(),e("span",{class:"token punctuation"},"{"),o(" defineUserConfig "),e("span",{class:"token punctuation"},"}"),o(),e("span",{class:"token keyword"},"from"),o(),e("span",{class:"token string"},'"vuepress"'),e("span",{class:"token punctuation"},";"),o(`

`),e("span",{class:"token keyword"},"export"),o(),e("span",{class:"token keyword"},"default"),o(),e("span",{class:"token function"},"defineUserConfig"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},"{"),o(`
   `),e("span",{class:"token comment"},"// put your config here"),o(`
`),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),o(`
`)])]),e("div",{class:"highlight-lines"},[e("br"),e("div",{class:"highlight-line"},"\xA0"),e("br"),e("div",{class:"highlight-line"},"\xA0"),e("br"),e("div",{class:"highlight-line"},"\xA0")]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),S=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token comment"},"// .vuepress/config.ts"),o(`
`),e("span",{class:"token keyword"},"import"),o(),e("span",{class:"token punctuation"},"{"),o(" defineUserConfig "),e("span",{class:"token punctuation"},"}"),o(),e("span",{class:"token keyword"},"from"),o(),e("span",{class:"token string"},'"vuepress"'),e("span",{class:"token punctuation"},";"),o(`

`),e("span",{class:"token keyword"},"export"),o(),e("span",{class:"token keyword"},"default"),o(),e("span",{class:"token function"},"defineUserConfig"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},"{"),o(`
   `),e("span",{class:"token comment"},"// put your config here"),o(`
`),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),o(`
`)])]),e("div",{class:"highlight-lines"},[e("br"),e("div",{class:"highlight-line"},"\xA0"),e("br"),e("div",{class:"highlight-line"},"\xA0"),e("br"),e("div",{class:"highlight-line"},"\xA0")]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),x=i('<h2 id="config-scope" tabindex="-1"><a class="header-anchor" href="#config-scope" aria-hidden="true">#</a> Config Scope</h2><h3 id="site-config" tabindex="-1"><a class="header-anchor" href="#site-config" aria-hidden="true">#</a> Site Config</h3><p>Config items in the Site Config are directly read by VuePress, have nothing to do with the theme and can take effect in all themes.</p><p>We know that every site should have its <code>lang</code>, <code>title</code> and <code>description</code> properties, so VuePress has built-in support for setting these properties.</p>',4),T={class:"custom-container info"},j=e("p",{class:"custom-container-title"},"Site Config",-1),I={href:"https://v2.vuepress.vuejs.org/en/reference/config.html",target:"_blank",rel:"noopener noreferrer"},z=e("h3",{id:"theme-config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#theme-config","aria-hidden":"true"},"#"),o(" Theme Config")],-1),N=e("p",null,[o("Theme config is the object you pass to "),e("code",null,"hopeTheme"),o(" function, which will be handled by VuePress Theme Hope.")],-1),U=i('<div class="custom-container tip"><p class="custom-container-title">Hints and Checks</p><p>If you are using an editor that supports TS/JS language features (such as VSCode), you can easily get option hints and checks.</p><ul><li><p>You can hover over an option to get hints:</p><p><img src="'+m+'" alt="option hint" data-mode="lightmode-only" loading="lazy"><img src="'+v+'" alt="option hint" data-mode="darkmode-only" loading="lazy"></p></li><li><p>If you enter wrong option name or invalid value, you will get error message:</p><p><img src="'+_+'" alt="Error message" data-mode="lightmode-only" loading="lazy"><img src="'+b+'" alt="Error message" data-mode="darkmode-only" loading="lazy"></p></li><li><p>You can get autocompletion while inputting:</p><p><img src="'+y+'" alt="autocomplete" data-mode="lightmode-only" loading="lazy"><img src="'+k+'" alt="Autocomplete" data-mode="darkmode-only" loading="lazy"></p></li></ul></div><h3 id="more" tabindex="-1"><a class="header-anchor" href="#more" aria-hidden="true">#</a> More</h3>',2),E={class:"custom-container info"},F=e("p",{class:"custom-container-title"},"Plugin Config",-1),L=e("code",null,"plugins.PLUGIN_NAME",-1),Y={class:"custom-container info"},A=i('<p class="custom-container-title">Style Config</p><p>VuePress Theme Hope is using <code>.vuepress/styles</code> folder to store style config like other themes.</p><p>In this folder you can:</p><ul><li>Create <code>index.scss</code> to inject additional CSS styles</li><li>Create <code>config.scss</code> for styling config</li><li>Create <code>palette.scss</code> to set color and layout</li></ul>',4),H={class:"custom-container info"},J=e("p",{class:"custom-container-title"},"Page Config",-1);function M(B,R){const c=a("CodeTabs"),l=a("ExternalLinkIcon"),n=a("RouterLink");return g(),h("div",null,[w,f(" more "),V,s(c,{id:"33",data:[{title:"TS"},{title:"JS"}],"tab-id":"language"},{tab0:t(({title:r,value:d,isActive:u})=>[P]),tab1:t(({title:r,value:d,isActive:u})=>[S]),_:1}),x,e("div",T,[j,e("p",null,[o("You can go to "),e("a",I,[o("VuePress2 \u2192 Reference \u2192 Configuration"),s(l)]),o(" to see all VuePress configuration.")])]),z,N,e("p",null,[o("You can find all the theme config in "),s(n,{to:"/config/"},{default:t(()=>[o("Config \u2192 Theme Config")]),_:1}),o(".")]),U,e("div",E,[F,e("p",null,[o("VuePress Theme Hope bundles some plugins, you can pass plugin options through "),L,o(" in theme options, see "),s(n,{to:"/config/plugins/"},{default:t(()=>[o("Config \u2192 Theme Plugin")]),_:1}),o(" for more details.")]),e("p",null,[o("If you want to use additional plugins, please import the plugin yourself and pass plugin options, see "),s(n,{to:"/cookbook/vuepress/plugin.html"},{default:t(()=>[o("VuePress \u2192 plugins")]),_:1}),o(" for details.")])]),e("div",Y,[A,e("p",null,[o("For more details, see "),s(n,{to:"/config/style.html"},{default:t(()=>[o("Config \u2192 Style")]),_:1}),o(".")])]),e("div",H,[J,e("p",null,[o("VuePress supports page scope config of specific page through YAML Frontmatter in Markdown files. For details, see "),s(n,{to:"/cookbook/tutorial/content.html#frontmatter"},{default:t(()=>[o("Project Content \u2192 Frontmatter")]),_:1}),o(" in the previous chapter.")])])])}const q=p(C,[["render",M],["__file","config.html.vue"]]);export{q as default};
