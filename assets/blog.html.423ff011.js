import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as r,b as a,e,a as o,w as d,h as c,r as n}from"./app.7119fecc.js";const h={},s=a("h2",{id:"intro",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#intro","aria-hidden":"true"},"#"),e(" Intro")],-1),u=a("p",null,[e("The theme provides blog feature, and it\u2019s "),a("strong",null,"not"),e(" enabled by default.")],-1),p=a("p",null,[e("You can enable blog feature by setting "),a("code",null,"plugins.blog"),e(" to "),a("code",null,"true"),e(" in theme options.")],-1),g=c('<h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="autoexcerpt" tabindex="-1"><a class="header-anchor" href="#autoexcerpt" aria-hidden="true">#</a> autoExcerpt</h3><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether to generate excerpt for every page.</p><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><ul><li>Type: <code>(page: Page) =&gt; boolean</code></li><li>Default: <code>(page) =&gt; Boolean(page.filePathRelative) &amp;&amp; !page.frontmatter.home</code></li></ul><p>Page filter, determine whether a page should be included.</p><p>By default, all the pages generated from Markdown files but not homepage will be included as articles.</p><h3 id="article" tabindex="-1"><a class="header-anchor" href="#article" aria-hidden="true">#</a> article</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/article/</code></li></ul><p>Article list route path.</p><h3 id="category" tabindex="-1"><a class="header-anchor" href="#category" aria-hidden="true">#</a> category</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/category/</code></li></ul><p>Category map route path.</p><h3 id="categoryitem" tabindex="-1"><a class="header-anchor" href="#categoryitem" aria-hidden="true">#</a> categoryItem</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/category/:name/</code></li></ul><p>Category list route path. <code>:name</code> will be replaced by category name.</p><h3 id="tag" tabindex="-1"><a class="header-anchor" href="#tag" aria-hidden="true">#</a> tag</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/tag/</code></li></ul><p>Tag map route path.</p><h3 id="tagitem" tabindex="-1"><a class="header-anchor" href="#tagitem" aria-hidden="true">#</a> tagItem</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/tag/:name/</code></li></ul><p>Tag list route path. <code>:name</code> will be replaced by tag name.</p><h3 id="encrypted" tabindex="-1"><a class="header-anchor" href="#encrypted" aria-hidden="true">#</a> encrypted</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/encrypted/</code></li></ul><p>Encrypted articles list route path.</p><h3 id="slide" tabindex="-1"><a class="header-anchor" href="#slide" aria-hidden="true">#</a> slide</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/slide/</code></li></ul><p>Slides list route path.</p><h3 id="star" tabindex="-1"><a class="header-anchor" href="#star" aria-hidden="true">#</a> star</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/star/</code></li></ul><p>Star article list route path.</p><h3 id="timeline" tabindex="-1"><a class="header-anchor" href="#timeline" aria-hidden="true">#</a> timeline</h3><ul><li>Type: <code>string</code></li><li>Default: <code>/timeline/</code></li></ul><p>Timeline list route path.</p>',35);function f(m,b){const t=n("RouterLink");return l(),r("div",null,[s,u,p,a("p",null,[e("For instructions, please see "),o(t,{to:"/guide/blog/intro.html"},{default:d(()=>[e("Blog Intro")]),_:1}),e(".")]),g])}const x=i(h,[["render",f],["__file","blog.html.vue"]]);export{x as default};
