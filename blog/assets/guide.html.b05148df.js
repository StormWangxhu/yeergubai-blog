import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as u,a,b as s,d as n,w as e,e as o,r as p}from"./app.92210660.js";const r={},d=s("p",null,[n("With "),s("code",null,"vuepress-plugin-blog2"),n(", you can easily bring blog feature into your theme.")],-1),k=s("h2",{id:"how-it-works",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#how-it-works","aria-hidden":"true"},"#"),n(" How it works")],-1),m=o(`<p>The flowchart above may help you understand its design goal and how the plugin works.</p><h2 id="collecting-articles" tabindex="-1"><a class="header-anchor" href="#collecting-articles" aria-hidden="true">#</a> Collecting Articles</h2><p>The plugin filters all pages using <code>filter</code> option to drop pages you don\u2019t want.</p><div class="custom-container note"><p class="custom-container-title">Note</p><p>By default, all the pages generated from Markdown files but not homepage are included as articles.</p></div><p>You can fully customize pages to collect through option <code>filter</code>, which accepts a function <code>(page: Page) =&gt; boolean</code>.</p><h2 id="gathering-info" tabindex="-1"><a class="header-anchor" href="#gathering-info" aria-hidden="true">#</a> Gathering Info</h2><p>You should set <code>getInfo</code> option with a function accepting <code>Page</code> as argument and returning a object containing the info you want.</p><p>The plugin will collect all the info you want and write them to <code>routeMeta</code> field of each page, so you will be able to get these information through Composition API later.</p><details class="custom-container details"><summary>Demo</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// theme</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;blog2&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> filePathRelative<span class="token punctuation">,</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// drop those pages which is NOT generated from file</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filePathRelative<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

          <span class="token comment">// drop those pages in \`archives\` directory</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>filePathRelative<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;archives/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

          <span class="token comment">// drop those pages which do not use default layout</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>frontmatter<span class="token punctuation">.</span>home <span class="token operator">||</span> frontmatter<span class="token punctuation">.</span>layout<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token function-variable function">getInfo</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> excerpt<span class="token punctuation">,</span> frontmatter<span class="token punctuation">,</span> git <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// getting page info</span>
          <span class="token keyword">const</span> info<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            author<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>author <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            categories<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>categories <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            date<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>date <span class="token operator">||</span> git<span class="token punctuation">.</span>createdTime <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            tags<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>tags <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            excerpt<span class="token operator">:</span> page<span class="token punctuation">.</span>excerpt<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>

          <span class="token keyword">return</span> info<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// other plugins ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="customizing-categories-and-types" tabindex="-1"><a class="header-anchor" href="#customizing-categories-and-types" aria-hidden="true">#</a> Customizing Categories and Types</h2><p>Basically, you would want 2 types of collection in your blog:</p><ul><li><p>Category:</p><p>&quot;Category&quot; means grouping articles with their labels.</p><p>For example, each article may have their &quot;categories&quot; and &quot;tags&quot;.</p></li><li><p>Type:</p><p>&quot;Type&quot; means identifying articles with conditions.</p><p>For example, you may want to describe some of your articles as diary.</p></li></ul><p>After understanding description of these 2 types, you can set <code>category</code> and <code>type</code> options, each accepts an array, and each element represents a configuation.</p><p>Let\u2019s start with 2 examples here.</p><p>Imagine you are setting tags for each articles witlh <code>tag</code> field in page frontmatter. You want a tag mapping page in <code>/tag/</code> with <code>TagMap</code> layout , and group each tag list with tagName in <code>/tag/tagName</code> with <code>TagList</code> layout, you probably need a configuation like this:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// theme</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;blog2&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// other options ...</span>
        category<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            key<span class="token operator">:</span> <span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> frontmatter<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            path<span class="token operator">:</span> <span class="token string">&quot;/tag/&quot;</span><span class="token punctuation">,</span>
            layout<span class="token operator">:</span> <span class="token string">&quot;TagMap&quot;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">frontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;Tag page&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            itemPath<span class="token operator">:</span> <span class="token string">&quot;/tag/:name/&quot;</span><span class="token punctuation">,</span>
            itemLayout<span class="token operator">:</span> <span class="token string">&quot;TagList&quot;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">itemFrontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Tag </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// other plugins ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Also, you may want to star some of your articles, and display them to visitors. When you are setting <code>star: true</code> in frontmatter to mark them, you probably need a configuation like this to display them in <code>/star/</code> path with <code>StarList</code> layout:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// theme</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;blog2&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// other options ...</span>
        type<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            key<span class="token operator">:</span> <span class="token string">&quot;star&quot;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> frontmatter<span class="token punctuation">.</span>star<span class="token punctuation">,</span>
            path<span class="token operator">:</span> <span class="token string">&quot;/star/&quot;</span><span class="token punctuation">,</span>
            layout<span class="token operator">:</span> <span class="token string">&quot;StarList&quot;</span><span class="token punctuation">,</span>
            <span class="token function-variable function">frontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;Star page&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// other plugins ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),v=o(`<h2 id="using-composition-api-in-client-side" tabindex="-1"><a class="header-anchor" href="#using-composition-api-in-client-side" aria-hidden="true">#</a> Using Composition API in Client-side</h2><p>When generating each page, the plugin will set following information under <code>frontmatter.blog</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BlogFrontmatterOptions</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** Current type of the page */</span>
  type<span class="token operator">:</span> <span class="token string">&quot;category&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** Unique key under current category or tag */</span>
  key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Current category name
   *
   * <span class="token keyword">@description</span> Only available in category item page
   */</span>

  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So you can invoke <code>useBlogCategory()</code> and <code>useBlogType()</code> directly, and the result will be the category or type bind to current route.</p><p>Also, you can pass <code>key</code> you want as argument, then you will get information bind to that key.</p>`,5),g=o(`<h2 id="i18n-support" tabindex="-1"><a class="header-anchor" href="#i18n-support" aria-hidden="true">#</a> I18n Support</h2><p>This plugin adds native i18n support, so your settings will be automatically apply to each language.</p><p>For example, if user has following lcoales config, and you are setting the &quot;star&quot; example above:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  locales<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;en-US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then <code>/zh/star/</code> and <code>/star/</code> will both be available, and only articles under the correct locale will appear.</p>`,5);function b(h,y){const i=p("Mermaid"),t=p("RouterLink");return l(),u("div",null,[d,k,a(i,{id:"mermaid-6",code:"eNqNVc1u2zAMvucpCF98WS/bzgOWABsKtEWwZNvB6UG1GVuYLRmyvCAvsAfYI+5JRurHloMEbQ6RKJEfyY8UfWz1qWyEsbBfrwCG8aU2om9gHNBAkX3nZScrzJ7pFqDU6ijrItuhhb4da6lA91ZqNTgFVNUqRVG6QkJ54iVBqaTBkq28UwCDotoE6G+0By9kz3d3n5wCA70vsq/klmKVZYvDQZ2kbSA/ytaiyUMcS5MP3kSqo47qNdp7Eq/rfyyyn0ZadBZgNRg9WnxEK0Lkc6BOrFGhERa3okZ25SXoSfSEAJwYb49dfwlt6QwoeKfpVCfaSgKptTm70yt0AbRa95ugVWQPJAGKkiwveOMQ7azIZETwhJCr/AF0IvGxHmVbHVQeT55Eh/Dvz1/g3If8oB5FnxoP2iSOdyR5WqJbvp+dXknragqRaAazzbuDasWZSkSbo9HKdoJzIYmI7rZeg7cPUYuFL7PmQaXdy7/QwWmlKZA0rlD4RUiksugFX86EAVaYOuGi2vbce4Obld6TRnFZ5GWNWWUih8rE9OSUcO4JctuEIqrXZebR0QzrX5ZzHihP6nfr2fm8vdGbqn6bcQaJbMf8bjIdQk9YnsDTiVS2EpWlmbTxm9emkn+5bialDzZmW4q2nbt8QxJPznWr63gKn7f3sz5lMkUd4VMsz1uKwye3McJ+rg/YhmZW3cAvPC9MeOgtBqgfRDTA3Ywz4ArkILh3ZluDdjSKOeDVWQXCfstB2iL7wQu8UKzOfLb0rec+ImEPQlUcjPdN/djxX2zK9BPie5yQFhN3Km64CHVOG4JuXFyr/7wqODc="}),m,s("p",null,[n("See, setting these 2 types is easy. For full options, please see "),a(t,{to:"/config.html#blog-category-config"},{default:e(()=>[n("Category Config")]),_:1}),n(" and "),a(t,{to:"/config.html#blog-type-config"},{default:e(()=>[n("Type Config")]),_:1}),n(".")]),v,s("p",null,[n("For return types, please see "),a(t,{to:"/config.html#composition-api"},{default:e(()=>[n("Composition API Return Types")]),_:1}),n(".")]),g])}const q=c(r,[["render",b],["__file","guide.html.vue"]]);export{q as default};
