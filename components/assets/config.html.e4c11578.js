import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,e as s}from"./app.9694f4a7.js";const o={},t=s(`<h2 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> components</h2><ul><li><p>Type: <code>AvailableComponent[]</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AvailableComponent</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&quot;Badge&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;CodePen&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;FontIcon&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;PDF&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;StackBlitz&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;YouTube&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Default: <code>[]</code></p></li></ul><p>Components to be registered.</p><p>Available component names:</p><ul><li><code>&quot;Badge&quot;</code></li><li><code>&quot;CodePen&quot;</code></li><li><code>&quot;FontIcon&quot;</code></li><li><code>&quot;PDF&quot;</code></li><li><code>&quot;StackBlitz&quot;</code></li><li><code>&quot;YouTube&quot;</code></li></ul><h2 id="addthis" tabindex="-1"><a class="header-anchor" href="#addthis" aria-hidden="true">#</a> addThis</h2><ul><li>Type: <code>string | false</code></li><li>Default: <code>false</code></li></ul><p>Public ID of addThis.</p><h2 id="backtotop" tabindex="-1"><a class="header-anchor" href="#backtotop" aria-hidden="true">#</a> backToTop</h2><ul><li>Type: <code>boolean | number</code></li><li>Default: <code>false</code></li></ul><p>Whether enabling backToTop button. When setting a number, it will be used as BackToTop button threshold distance (in pixels), default is 300.</p><h2 id="backtotoplocales" tabindex="-1"><a class="header-anchor" href="#backtotoplocales" aria-hidden="true">#</a> backToTopLocales</h2><ul><li><p>Type: <code>BackToTopLocaleConfig</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BackToTopLocaleData</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * Back to top button label text
   */</span>
  backToTop<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">BackToTopLocaleConfig</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>localePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> BackToTopLocaleData<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Required: No</p></li></ul><p>Locales config for BackToTop button.</p><h2 id="iconassets" tabindex="-1"><a class="header-anchor" href="#iconassets" aria-hidden="true">#</a> iconAssets</h2><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>Link of font icon asset, <code>&#39;iconfont&#39;</code> and <code>&#39;fontawesome&#39;</code> keywords are supported.</p><h2 id="iconprefix" tabindex="-1"><a class="header-anchor" href="#iconprefix" aria-hidden="true">#</a> iconPrefix</h2><ul><li>Type: <code>string</code></li><li>Default: Inffered from iconAssets</li></ul><p>Class prefix of font icon</p>`,20),i=[t];function c(l,p){return n(),a("div",null,i)}const u=e(o,[["render",c],["__file","config.html.vue"]]);export{u as default};
